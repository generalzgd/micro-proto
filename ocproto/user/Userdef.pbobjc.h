// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user/userdef.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class UserInfo;
@class UserOneUser;
@class UserPLevelInfo;
GPB_ENUM_FWD_DECLARE(CommErrorType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum UserIdent

/** 用户权限类型定义 */
typedef GPB_ENUM(UserIdent) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  UserIdent_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 普通账号 */
  UserIdent_Normal = 0,

  /** 官方账号 */
  UserIdent_Official = 1,

  /** 系统账号 */
  UserIdent_System = 2,
};

GPBEnumDescriptor *UserIdent_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL UserIdent_IsValidValue(int32_t value);

#pragma mark - UserUserdefRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface UserUserdefRoot : GPBRootObject
@end

#pragma mark - UserGetUserInfoRequest

typedef GPB_ENUM(UserGetUserInfoRequest_FieldNumber) {
  UserGetUserInfoRequest_FieldNumber_TargetUidArray = 1,
  UserGetUserInfoRequest_FieldNumber_TraceId = 2,
  UserGetUserInfoRequest_FieldNumber_ThirdGameId = 3,
};

/**
 * ------------------------------------------
 * 获得用户信息, 获取的信息（例如用户等级）不会实时更新，时间长了，需要重新获取
 * c2s
 **/
@interface UserGetUserInfoRequest : GPBMessage

/** 要获取的用户uid */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *targetUidArray;
/** The number of items in @c targetUidArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger targetUidArray_Count;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** 第三方绑定的游戏ID，0:不查 */
@property(nonatomic, readwrite) uint32_t thirdGameId;

@end

#pragma mark - UserGetUserInfoReply

typedef GPB_ENUM(UserGetUserInfoReply_FieldNumber) {
  UserGetUserInfoReply_FieldNumber_Code = 1,
  UserGetUserInfoReply_FieldNumber_Message = 2,
  UserGetUserInfoReply_FieldNumber_UserArray = 3,
  UserGetUserInfoReply_FieldNumber_Traceid = 4,
  UserGetUserInfoReply_FieldNumber_ThirdAccount = 5,
};

/**
 * s2c
 **/
@interface UserGetUserInfoReply : GPBMessage

@property(nonatomic, readwrite) enum CommErrorType code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserInfo*> *userArray;
/** The number of items in @c userArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userArray_Count;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceid;

/** 第三方游戏账号信息，需要接收方转换成对应的结构体 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, NSString*> *thirdAccount;
/** The number of items in @c thirdAccount without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger thirdAccount_Count;

@end

/**
 * Fetches the raw value of a @c UserGetUserInfoReply's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserGetUserInfoReply_Code_RawValue(UserGetUserInfoReply *message);
/**
 * Sets the raw value of an @c UserGetUserInfoReply's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserGetUserInfoReply_Code_RawValue(UserGetUserInfoReply *message, int32_t value);

#pragma mark - UserGetUserPLevelRequest

typedef GPB_ENUM(UserGetUserPLevelRequest_FieldNumber) {
  UserGetUserPLevelRequest_FieldNumber_TargetUid = 1,
  UserGetUserPLevelRequest_FieldNumber_TraceId = 2,
};

/**
 * 获取用户等级信息
 **/
@interface UserGetUserPLevelRequest : GPBMessage

/** 要获取的用户id, 如果没有则取自己 */
@property(nonatomic, readwrite) uint32_t targetUid;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

#pragma mark - UserGetUserPLevelReply

typedef GPB_ENUM(UserGetUserPLevelReply_FieldNumber) {
  UserGetUserPLevelReply_FieldNumber_Code = 1,
  UserGetUserPLevelReply_FieldNumber_Message = 2,
  UserGetUserPLevelReply_FieldNumber_Level = 3,
  UserGetUserPLevelReply_FieldNumber_TraceId = 4,
};

/**
 * 响应用户等级信息
 **/
@interface UserGetUserPLevelReply : GPBMessage

@property(nonatomic, readwrite) enum CommErrorType code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 用户等级信息 */
@property(nonatomic, readwrite, strong, null_resettable) UserPLevelInfo *level;
/** Test to see if @c level has been set. */
@property(nonatomic, readwrite) BOOL hasLevel;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

/**
 * Fetches the raw value of a @c UserGetUserPLevelReply's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserGetUserPLevelReply_Code_RawValue(UserGetUserPLevelReply *message);
/**
 * Sets the raw value of an @c UserGetUserPLevelReply's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserGetUserPLevelReply_Code_RawValue(UserGetUserPLevelReply *message, int32_t value);

#pragma mark - UserPLevelInfo

typedef GPB_ENUM(UserPLevelInfo_FieldNumber) {
  UserPLevelInfo_FieldNumber_Level = 1,
  UserPLevelInfo_FieldNumber_Exp = 2,
  UserPLevelInfo_FieldNumber_Left = 3,
};

/**
 * 用户等级信息
 **/
@interface UserPLevelInfo : GPBMessage

/** 当前的用户等级 */
@property(nonatomic, readwrite) uint32_t level;

/** 当前的等级经验 */
@property(nonatomic, readwrite) uint32_t exp;

/** 升级到下一等级需要的经验 */
@property(nonatomic, readwrite) uint32_t left;

@end

#pragma mark - UserInfo

typedef GPB_ENUM(UserInfo_FieldNumber) {
  UserInfo_FieldNumber_Uid = 1,
  UserInfo_FieldNumber_Nickname = 2,
  UserInfo_FieldNumber_Avatar = 3,
  UserInfo_FieldNumber_Gender = 4,
  UserInfo_FieldNumber_Ident = 5,
  UserInfo_FieldNumber_Plevel = 6,
  UserInfo_FieldNumber_Anchor = 7,
  UserInfo_FieldNumber_Mobile = 8,
  UserInfo_FieldNumber_InviteCode = 9,
};

/**
 * 用户信息
 **/
@interface UserInfo : GPBMessage

@property(nonatomic, readwrite) uint32_t uid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

@property(nonatomic, readwrite, copy, null_resettable) NSString *avatar;

@property(nonatomic, readwrite) uint32_t gender;

/** 用户权限 */
@property(nonatomic, readwrite) UserIdent ident;

/** 用户等级 */
@property(nonatomic, readwrite, strong, null_resettable) UserPLevelInfo *plevel;
/** Test to see if @c plevel has been set. */
@property(nonatomic, readwrite) BOOL hasPlevel;

/** 是否主播 */
@property(nonatomic, readwrite) BOOL anchor;

/** 手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

@property(nonatomic, readwrite, copy, null_resettable) NSString *inviteCode;

@end

/**
 * Fetches the raw value of a @c UserInfo's @c ident property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserInfo_Ident_RawValue(UserInfo *message);
/**
 * Sets the raw value of an @c UserInfo's @c ident property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserInfo_Ident_RawValue(UserInfo *message, int32_t value);

#pragma mark - UserOneUser

typedef GPB_ENUM(UserOneUser_FieldNumber) {
  UserOneUser_FieldNumber_Uid = 1,
  UserOneUser_FieldNumber_Platform = 2,
  UserOneUser_FieldNumber_SocketId = 3,
  UserOneUser_FieldNumber_GateIp = 4,
};

/**
 * -------------------用户体系协议------------------------
 * 一个用户的信息
 **/
@interface UserOneUser : GPBMessage

/** 为0表示发给所有人 */
@property(nonatomic, readwrite) uint32_t uid;

/** 为FFFFFFFF表示发给所有端 */
@property(nonatomic, readwrite) uint32_t platform;

/** 链接ID */
@property(nonatomic, readwrite) uint32_t socketId;

/** 网关IP */
@property(nonatomic, readwrite, copy, null_resettable) NSString *gateIp;

@end

#pragma mark - UserLoginRequest

typedef GPB_ENUM(UserLoginRequest_FieldNumber) {
  UserLoginRequest_FieldNumber_Uid = 1,
  UserLoginRequest_FieldNumber_Token = 2,
  UserLoginRequest_FieldNumber_Platform = 3,
  UserLoginRequest_FieldNumber_TraceId = 4,
};

/**
 * 浩方体系通用登录协议
 **/
@interface UserLoginRequest : GPBMessage

@property(nonatomic, readwrite) uint32_t uid;

@property(nonatomic, readwrite, copy, null_resettable) NSString *token;

@property(nonatomic, readwrite) uint32_t platform;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

#pragma mark - UserLoginReply

typedef GPB_ENUM(UserLoginReply_FieldNumber) {
  UserLoginReply_FieldNumber_Code = 1,
  UserLoginReply_FieldNumber_Message = 2,
  UserLoginReply_FieldNumber_User = 3,
  UserLoginReply_FieldNumber_TraceId = 4,
  UserLoginReply_FieldNumber_LoginCnt = 5,
};

/**
 * 通用登录协议
 **/
@interface UserLoginReply : GPBMessage

@property(nonatomic, readwrite) enum CommErrorType code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 获取的信息（例如用户等级）不会实时更新，时间长了，需要重新登录获取 */
@property(nonatomic, readwrite, strong, null_resettable) UserInfo *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 用户的uuid，用来追踪用户消息链 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** 当前端已登录数量，如果>1，需要踢掉旧链接。redis里值不超过1 */
@property(nonatomic, readwrite) uint32_t loginCnt;

@end

/**
 * Fetches the raw value of a @c UserLoginReply's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserLoginReply_Code_RawValue(UserLoginReply *message);
/**
 * Sets the raw value of an @c UserLoginReply's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserLoginReply_Code_RawValue(UserLoginReply *message, int32_t value);

#pragma mark - UserLogoutRequest

typedef GPB_ENUM(UserLogoutRequest_FieldNumber) {
  UserLogoutRequest_FieldNumber_TraceId = 1,
  UserLogoutRequest_FieldNumber_Except = 2,
};

/**
 * 通用登出协议
 **/
@interface UserLogoutRequest : GPBMessage

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** true:手动正常退出，false:异常断开退出. 客户端发起该协议，需要指定true */
@property(nonatomic, readwrite) BOOL except;

@end

#pragma mark - UserLogoutReply

typedef GPB_ENUM(UserLogoutReply_FieldNumber) {
  UserLogoutReply_FieldNumber_Code = 1,
  UserLogoutReply_FieldNumber_Message = 2,
  UserLogoutReply_FieldNumber_TraceId = 3,
};

/**
 * 通用登出协议
 **/
@interface UserLogoutReply : GPBMessage

@property(nonatomic, readwrite) enum CommErrorType code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

/**
 * Fetches the raw value of a @c UserLogoutReply's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserLogoutReply_Code_RawValue(UserLogoutReply *message);
/**
 * Sets the raw value of an @c UserLogoutReply's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserLogoutReply_Code_RawValue(UserLogoutReply *message, int32_t value);

#pragma mark - UserKickOutRequest

typedef GPB_ENUM(UserKickOutRequest_FieldNumber) {
  UserKickOutRequest_FieldNumber_Uid = 1,
  UserKickOutRequest_FieldNumber_LastSid = 2,
  UserKickOutRequest_FieldNumber_LastPlatform = 3,
  UserKickOutRequest_FieldNumber_Message = 4,
  UserKickOutRequest_FieldNumber_TraceId = 5,
};

/**
 * -----------------------------------------
 * 服务发起踢人请求
 **/
@interface UserKickOutRequest : GPBMessage

/** 1重复登录 */
@property(nonatomic, readwrite) uint32_t uid;

/** z最后登录的socket id */
@property(nonatomic, readwrite) uint32_t lastSid;

/** 最后登录的终端 */
@property(nonatomic, readwrite) uint32_t lastPlatform;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

#pragma mark - UserKickOut

typedef GPB_ENUM(UserKickOut_FieldNumber) {
  UserKickOut_FieldNumber_Code = 1,
  UserKickOut_FieldNumber_Message = 2,
  UserKickOut_FieldNumber_TraceId = 3,
};

/**
 * 踢出，
 * s2c，请使用ImError代替
 **/
@interface UserKickOut : GPBMessage

/** 2：重复登录 */
@property(nonatomic, readwrite) enum CommErrorType code;

@property(nonatomic, readwrite, copy, null_resettable) NSString *message;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

/**
 * Fetches the raw value of a @c UserKickOut's @c code property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t UserKickOut_Code_RawValue(UserKickOut *message);
/**
 * Sets the raw value of an @c UserKickOut's @c code property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetUserKickOut_Code_RawValue(UserKickOut *message, int32_t value);

#pragma mark - UserLoginNotify

typedef GPB_ENUM(UserLoginNotify_FieldNumber) {
  UserLoginNotify_FieldNumber_User = 1,
  UserLoginNotify_FieldNumber_LoginTime = 2,
  UserLoginNotify_FieldNumber_SocketId = 3,
  UserLoginNotify_FieldNumber_CurrentGateIp = 4,
  UserLoginNotify_FieldNumber_TraceId = 5,
};

/**
 * 用户登录通知给所有网关
 **/
@interface UserLoginNotify : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) UserOneUser *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

@property(nonatomic, readwrite) int64_t loginTime;

@property(nonatomic, readwrite) uint32_t socketId;

/** 当前登录的网关ip */
@property(nonatomic, readwrite, copy, null_resettable) NSString *currentGateIp;

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

#pragma mark - UserMsgNotify

typedef GPB_ENUM(UserMsgNotify_FieldNumber) {
  UserMsgNotify_FieldNumber_UserArray = 1,
  UserMsgNotify_FieldNumber_Message = 2,
  UserMsgNotify_FieldNumber_CmdId = 3,
  UserMsgNotify_FieldNumber_GateType = 4,
};

/**
 * 直接发给用户的协议
 **/
@interface UserMsgNotify : GPBMessage

/** 注意，如果列表里有uid为0的，一定要放最前，不然同一个用户可能会收到多次同样的消息，platform也一样，需要发起方控制 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<UserOneUser*> *userArray;
/** The number of items in @c userArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger userArray_Count;

@property(nonatomic, readwrite, copy, null_resettable) NSData *message;

/** 对应协议的cmdid值 */
@property(nonatomic, readwrite) uint32_t cmdId;

/** 网关类型，0Im网关，1通用网关 */
@property(nonatomic, readwrite) int32_t gateType;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
