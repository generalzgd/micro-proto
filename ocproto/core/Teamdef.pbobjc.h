// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: core/teamdef.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class CommReply;
@class CoreAccount;
@class CoreTeamInfo;
@class UserInfo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum CoreTeamState

/** 队伍状态 */
typedef GPB_ENUM(CoreTeamState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CoreTeamState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 准备阶段 */
  CoreTeamState_Prepare = 0,

  /** 匹配阶段 */
  CoreTeamState_Matching = 1,

  /** 启动阶段（调用多多游戏接口过程） */
  CoreTeamState_Starting = 2,

  /** 游戏阶段 */
  CoreTeamState_Gaming = 3,

  /** 游戏结束阶段，需要销毁队伍信息 */
  CoreTeamState_Ending = 4,
};

GPBEnumDescriptor *CoreTeamState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CoreTeamState_IsValidValue(int32_t value);

#pragma mark - Enum CoreTeamMemberState

/** 队员状态 */
typedef GPB_ENUM(CoreTeamMemberState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CoreTeamMemberState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 空闲状态 */
  CoreTeamMemberState_Idle = 0,

  /** 准备状态 */
  CoreTeamMemberState_Ready = 1,

  /** 游戏中 */
  CoreTeamMemberState_InGame = 2,
};

GPBEnumDescriptor *CoreTeamMemberState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CoreTeamMemberState_IsValidValue(int32_t value);

#pragma mark - Enum CoreTeamInfoAction

/** 队伍信息，成员列表刷新动作 */
typedef GPB_ENUM(CoreTeamInfoAction) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CoreTeamInfoAction_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  CoreTeamInfoAction_Nothing = 0,
  CoreTeamInfoAction_All = 1,
  CoreTeamInfoAction_Add = 2,
  CoreTeamInfoAction_Del = 3,
  CoreTeamInfoAction_Update = 4,
};

GPBEnumDescriptor *CoreTeamInfoAction_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CoreTeamInfoAction_IsValidValue(int32_t value);

#pragma mark - Enum CoreMatchState

/** 匹配状态 */
typedef GPB_ENUM(CoreMatchState) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  CoreMatchState_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 匹配 空闲状态 */
  CoreMatchState_MatchIdle = 0,

  /** 匹配 主队 */
  CoreMatchState_MatchLeader = 1,

  /** 匹配 从对 */
  CoreMatchState_MatchFollower = 2,
};

GPBEnumDescriptor *CoreMatchState_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL CoreMatchState_IsValidValue(int32_t value);

#pragma mark - CoreTeamdefRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CoreTeamdefRoot : GPBRootObject
@end

#pragma mark - CoreAccount

typedef GPB_ENUM(CoreAccount_FieldNumber) {
  CoreAccount_FieldNumber_User = 1,
  CoreAccount_FieldNumber_Nickname = 2,
  CoreAccount_FieldNumber_JoinTime = 3,
  CoreAccount_FieldNumber_State = 4,
};

/**
 * 多多账号和浩方账号信息
 **/
@interface CoreAccount : GPBMessage

/** 账号信息 */
@property(nonatomic, readwrite, strong, null_resettable) UserInfo *user;
/** Test to see if @c user has been set. */
@property(nonatomic, readwrite) BOOL hasUser;

/** 多多账号昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *nickname;

/** 加入队伍时间戳 */
@property(nonatomic, readwrite) int64_t joinTime;

/** 队员准备状态 */
@property(nonatomic, readwrite) CoreTeamMemberState state;

@end

/**
 * Fetches the raw value of a @c CoreAccount's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CoreAccount_State_RawValue(CoreAccount *message);
/**
 * Sets the raw value of an @c CoreAccount's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCoreAccount_State_RawValue(CoreAccount *message, int32_t value);

#pragma mark - CoreTeamInfo

typedef GPB_ENUM(CoreTeamInfo_FieldNumber) {
  CoreTeamInfo_FieldNumber_Id_p = 1,
  CoreTeamInfo_FieldNumber_LeaderUid = 2,
  CoreTeamInfo_FieldNumber_State = 4,
  CoreTeamInfo_FieldNumber_MembersArray = 5,
  CoreTeamInfo_FieldNumber_Action = 6,
  CoreTeamInfo_FieldNumber_CreateTime = 7,
  CoreTeamInfo_FieldNumber_MatchState = 8,
  CoreTeamInfo_FieldNumber_MatchedIds = 9,
  CoreTeamInfo_FieldNumber_PlayCost = 10,
  CoreTeamInfo_FieldNumber_PlayMode = 11,
};

/**
 * 队伍信息, 需要广播下发的队伍状态和队员列表。（广播）
 **/
@interface CoreTeamInfo : GPBMessage

/** 队伍编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

/** 队长ID */
@property(nonatomic, readwrite) uint32_t leaderUid;

/** 队伍状态 */
@property(nonatomic, readwrite) CoreTeamState state;

/** 队员列表, 该字段独立写入redis */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<CoreAccount*> *membersArray;
/** The number of items in @c membersArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger membersArray_Count;

/** 0:Idle, 1：所有队员列表，2：需要新增队员列表，3：需要删除的队员列表, 4: 只更新对应队员信息(状态) */
@property(nonatomic, readwrite) CoreTeamInfoAction action;

/** 创建时间戳 */
@property(nonatomic, readwrite) int64_t createTime;

/** 匹配状态 */
@property(nonatomic, readwrite) CoreMatchState matchState;

/** 匹配后，所有到队伍ID, 用,分割 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *matchedIds;

/** 玩一局的消耗值 */
@property(nonatomic, readwrite) uint32_t playCost;

/** 游戏模式 */
@property(nonatomic, readwrite) uint32_t playMode;

@end

/**
 * Fetches the raw value of a @c CoreTeamInfo's @c state property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CoreTeamInfo_State_RawValue(CoreTeamInfo *message);
/**
 * Sets the raw value of an @c CoreTeamInfo's @c state property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCoreTeamInfo_State_RawValue(CoreTeamInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c CoreTeamInfo's @c action property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CoreTeamInfo_Action_RawValue(CoreTeamInfo *message);
/**
 * Sets the raw value of an @c CoreTeamInfo's @c action property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCoreTeamInfo_Action_RawValue(CoreTeamInfo *message, int32_t value);

/**
 * Fetches the raw value of a @c CoreTeamInfo's @c matchState property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t CoreTeamInfo_MatchState_RawValue(CoreTeamInfo *message);
/**
 * Sets the raw value of an @c CoreTeamInfo's @c matchState property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetCoreTeamInfo_MatchState_RawValue(CoreTeamInfo *message, int32_t value);

#pragma mark - CoreCreateTeamRequest

typedef GPB_ENUM(CoreCreateTeamRequest_FieldNumber) {
  CoreCreateTeamRequest_FieldNumber_TraceId = 1,
};

/**
 * 创建队伍
 **/
@interface CoreCreateTeamRequest : GPBMessage

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

@end

#pragma mark - CoreCreateTeamReply

typedef GPB_ENUM(CoreCreateTeamReply_FieldNumber) {
  CoreCreateTeamReply_FieldNumber_Res = 1,
  CoreCreateTeamReply_FieldNumber_Account = 2,
  CoreCreateTeamReply_FieldNumber_TeamInfo = 4,
};

@interface CoreCreateTeamReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CommReply *res;
/** Test to see if @c res has been set. */
@property(nonatomic, readwrite) BOOL hasRes;

/** 多多和浩方用户信息 */
@property(nonatomic, readwrite, strong, null_resettable) CoreAccount *account;
/** Test to see if @c account has been set. */
@property(nonatomic, readwrite) BOOL hasAccount;

@property(nonatomic, readwrite, strong, null_resettable) CoreTeamInfo *teamInfo;
/** Test to see if @c teamInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTeamInfo;

@end

#pragma mark - CoreJoinTeamRequest

typedef GPB_ENUM(CoreJoinTeamRequest_FieldNumber) {
  CoreJoinTeamRequest_FieldNumber_TraceId = 1,
  CoreJoinTeamRequest_FieldNumber_TeamId = 2,
  CoreJoinTeamRequest_FieldNumber_MyTeamId = 3,
};

/**
 * 加入队伍
 **/
@interface CoreJoinTeamRequest : GPBMessage

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** 要加入的队伍编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *teamId;

/** 自己的队伍编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *myTeamId;

@end

#pragma mark - CoreJoinTeamReply

typedef GPB_ENUM(CoreJoinTeamReply_FieldNumber) {
  CoreJoinTeamReply_FieldNumber_Res = 1,
  CoreJoinTeamReply_FieldNumber_TeamInfo = 2,
};

@interface CoreJoinTeamReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CommReply *res;
/** Test to see if @c res has been set. */
@property(nonatomic, readwrite) BOOL hasRes;

/** 返回加入成功后的队伍信息 */
@property(nonatomic, readwrite, strong, null_resettable) CoreTeamInfo *teamInfo;
/** Test to see if @c teamInfo has been set. */
@property(nonatomic, readwrite) BOOL hasTeamInfo;

@end

#pragma mark - CoreLeaveTeamRequest

typedef GPB_ENUM(CoreLeaveTeamRequest_FieldNumber) {
  CoreLeaveTeamRequest_FieldNumber_TraceId = 1,
  CoreLeaveTeamRequest_FieldNumber_TeamId = 2,
  CoreLeaveTeamRequest_FieldNumber_Uid = 3,
};

/**
 * 队员主动离开队伍
 **/
@interface CoreLeaveTeamRequest : GPBMessage

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** 队伍编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *teamId;

/** 自己的uid, 如果是队长离开，需要更换队长。离开后广播队伍信息DuoTeamInfo */
@property(nonatomic, readwrite) uint32_t uid;

@end

#pragma mark - CoreLeaveTeamReply

typedef GPB_ENUM(CoreLeaveTeamReply_FieldNumber) {
  CoreLeaveTeamReply_FieldNumber_Res = 1,
};

@interface CoreLeaveTeamReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CommReply *res;
/** Test to see if @c res has been set. */
@property(nonatomic, readwrite) BOOL hasRes;

@end

#pragma mark - CoreKickMemberRequest

typedef GPB_ENUM(CoreKickMemberRequest_FieldNumber) {
  CoreKickMemberRequest_FieldNumber_TraceId = 1,
  CoreKickMemberRequest_FieldNumber_TargetUid = 2,
  CoreKickMemberRequest_FieldNumber_MyTeamId = 3,
};

/**
 * 踢人
 **/
@interface CoreKickMemberRequest : GPBMessage

/** 用户的uuid，用来追踪用户消息链路 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *traceId;

/** 被踢人的用户ID，需要leader权限 */
@property(nonatomic, readwrite) uint32_t targetUid;

/** 自己的队伍编号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *myTeamId;

@end

#pragma mark - CoreKickMemberReply

typedef GPB_ENUM(CoreKickMemberReply_FieldNumber) {
  CoreKickMemberReply_FieldNumber_Res = 1,
  CoreKickMemberReply_FieldNumber_KickedUidArray = 2,
};

@interface CoreKickMemberReply : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) CommReply *res;
/** Test to see if @c res has been set. */
@property(nonatomic, readwrite) BOOL hasRes;

/** 被踢的用户ID */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *kickedUidArray;
/** The number of items in @c kickedUidArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger kickedUidArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
